@model UNO.AppModel.UserModel
@{
    ViewBag.Title = "Change Password";
}
<div class="main-container" style="clear:both;">
    <!-- Container fluid Starts -->
    <div id="main-content" class="container-fluid">
        <!-- Spacer Starts -->
        <div class="spacer clearfix">
            <div class="row">
                <div class="col-md-7 col-centered">
                    <div class="blog blog-default ">
                        <div class="blog-header ">
                            <h4 class="blog-title pull-left mt5">View </h4>
                            <span class="clearfix"></span>
                        </div>

                        <div class="blog-body form p0">

                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary(true)
                                
                                <div class="form-horizontal form-bordered form-label-stripped">
                                    <div class="form-body p0">
                                        <div class="form-group">
                                            <label class="control-label col-md-3">Old Password</label>
                                            <div class="col-md-9">
                                                @Html.PasswordFor(model => model.Old_Password, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Old_Password, null, new { @class = "text-danger field-validation-error" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-3">New Password</label>
                                            <div class="col-md-9">
                                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger field-validation-error" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-3">Confirm Password</label>
                                            <div class="col-md-9">
                                                @Html.PasswordFor(model => model.Confirm_Password, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Confirm_Password, null, new { @class = "text-danger field-validation-error" })
                                                @Html.HiddenFor(model => model.USER_ID, new { @Value = Convert.ToInt64(Session["ACTIVE_USER"]) })
                                                @Html.HiddenFor(model => model.USER_CODE, new { @Value = Convert.ToString(Session["User"])})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="form-actions">
                                    <div class="row">
                                        <div class="col-md-12 text-center">
                                            <button type="submit" class="btn btn-info" id="btnUpdate"><i class="fa fa-save"></i>&nbsp;&nbsp;Save</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}